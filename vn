CREATE OR REPLACE PROCEDURE ${aether_5g_core_module_tgt_dataset_name}.aether_core_vnoe_utilization_outliers_sp(process_ts STRING, trans_ts STRING)
options(strict_mode=False)
BEGIN
  --Insert entry into audit table
MERGE
  `${target_project_id}.${audit_tgt_dataset_name}.${audit_target_tblname}` tgt
USING
  (
  SELECT
    CONCAT("5g core vnoe utilization outliers process") as prc_name,
    safe_cast(trans_ts AS datetime) AS start_time,
    safe_cast(SPLIT(trans_ts,' ')[
    OFFSET
      (0)] AS date) src_prc_dt ) src
ON ( src.prc_name=tgt.PROCESS_NAME AND src.START_TIME=tgt.START_TIME)
  WHEN NOT MATCHED THEN INSERT (
    PROCESS_MODULE,
    SCHEDULER,
    PROCESS_NAME,
    SOURCE_NAME,
    TARGET_NAME,
    START_TIME,
    END_TIME,
    PROCESS_DT,
    NUM_RECORDS_AFFECTED,
    STATUS,
    RETURN_MESSAGE )
  VALUES
  (
    "aether",
    "airflow",
    prc_name,
    "${aether_5g_core_module_src_project_id}.${aether_5g_core_module_src_dataset_name}.${aether_5g_core_module_src_smf_derived_tblname}",
    "${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_tgt_core_vnoe_utilization_tblname}",
     start_time,
     NULL,
     src_prc_dt,
     NULL,
     "Started",
     NULL
      );
----==================================================================================================================================================================================
---- Description: Identifies the top metric values by site and group for each metric across the full day (24-hour Window)
---- FILTER METRICS : active_sessions , total_subscribers
----==================================================================================================================================================================================

MERGE INTO  `${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_tgt_core_vnoe_utilization_tblname}` tgt 
USING (
---- Calculates total value per site/metric_name/event_time to identify top contributors
WITH aggregated_smf_data AS (
  SELECT
    metric_name,
    trans_dt,
    site_name,
    event_time,
    local_event_time,
    vendor,
    fqdn,
    group_key,
    group_value,
    fqdn_type,
    customer_segment,
    primary_clli,
    device_clli,
    region,
    area,
    market,
    latitude,
    longitude,
    value,
    SUM(value) OVER (
      PARTITION BY metric_name, site_name,fqdn,trans_dt, event_time
    ) AS total_value
  FROM  `${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_src_smf_derived_tblname}`
  WHERE  trans_dt =DATE(trans_ts)
         AND LOWER(metric_name) IN (lower('active_sessions_vzwinternet'),lower('active_sessions_v5ga01internet'),lower('simaltaneous_active_user'))),
smf_stats_per_day AS (
  SELECT
    metric_name,
    site_name,
    trans_dt,
    AVG(total_value) AS avg_value,
    STDDEV_POP(total_value) AS stddev_value
  FROM aggregated_smf_data
  GROUP BY metric_name, site_name, trans_dt
),

smf_ranked_data_with_zscore AS (
  SELECT
    a.*,
    s.avg_value,
    s.stddev_value,
    SAFE_DIVIDE(total_value - s.avg_value, s.stddev_value) AS z_score,
    DENSE_RANK() OVER (
      PARTITION BY a.metric_name, a.site_name,a.fqdn ,a.trans_dt
      ORDER BY total_value DESC
    ) AS rank,
    CASE 
      WHEN SAFE_DIVIDE(total_value - s.avg_value, s.stddev_value) > 2.25 THEN 1 
      ELSE 0 
    END AS its_outlier
  FROM aggregated_smf_data a
  JOIN smf_stats_per_day s
    ON a.metric_name = s.metric_name
    AND a.site_name = s.site_name
    AND a.trans_dt = s.trans_dt
),

-- Find the next best rank for each site that is not an outlier
smf_next_best_value AS (
  SELECT
    metric_name,
    site_name,
    trans_dt,
    MIN(rank) AS next_rank
  FROM smf_ranked_data_with_zscore
  WHERE its_outlier = 0
  GROUP BY metric_name, site_name, trans_dt
),
-- Final selection for Outlier Excluded Max
smf_final_selection AS (
  SELECT 
    '5g' AS technology,
    'curated_max' AS algorithm,
    n.trans_dt,
    event_time,
    local_event_time,
    vendor,
    fqdn AS device_name,
    'smf' AS function_name,
    n.metric_name,
    value AS metric_value,
    'count' AS metric_unit,
    group_key,
    group_value,
    fqdn_type AS device_type,
    customer_segment,
    primary_clli,
    device_clli,
    region,
    n.site_name,
    area,
    market,
    latitude,
    longitude,
    DATETIME(process_ts) AS schedule_time,
    CURRENT_TIMESTAMP() AS updated_timestamp,
    cast(null as string) as segment
  FROM smf_ranked_data_with_zscore r
  JOIN smf_next_best_value n
    ON r.metric_name = n.metric_name
    AND r.site_name = n.site_name
    AND r.trans_dt = n.trans_dt
    AND r.rank = n.next_rank
),
----For UPF Calculates total value per site/metric_name/event_time to identify top contributors
aggregated_upf_data AS (
    SELECT
        metric_name,
        trans_dt,
        site_name,
        event_time,
        local_event_time,
        vendor,
        fqdn,
        group_key,
        group_value,
        fqdn_type,
        customer_segment,
        primary_clli,
        device_clli,
        region,
        area,
        market,
        latitude,
        longitude,
        value,
        SUM(value) OVER (PARTITION BY metric_name, fqdn,site_name, trans_dt, event_time) AS total_value
    FROM
        `${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_src_upf_derived_tblname}`
    WHERE
        trans_dt =DATE(trans_ts)
         AND LOWER(metric_name) IN (lower('total_throughput'),lower('total_throughput_vzwinternet'),lower('total_throughput_v5ga01internet'))
),
upf_stats_per_day AS (
  SELECT
    metric_name,
    site_name,
    trans_dt,
    AVG(total_value) AS avg_value,
    STDDEV_POP(total_value) AS stddev_value
  FROM aggregated_upf_data
  GROUP BY metric_name, site_name, trans_dt
),

upf_ranked_data_with_zscore AS (
  SELECT
    a.*,
    s.avg_value,
    s.stddev_value,
    SAFE_DIVIDE(total_value - s.avg_value, s.stddev_value) AS z_score,
    DENSE_RANK() OVER (
      PARTITION BY a.metric_name, a.site_name,a.fqdn, a.trans_dt
      ORDER BY total_value DESC
    ) AS rank,
    CASE 
      WHEN SAFE_DIVIDE(total_value - s.avg_value, s.stddev_value) > 2.25 THEN 1 
      ELSE 0 
    END AS its_outlier
  FROM aggregated_upf_data a
  JOIN upf_stats_per_day s
    ON a.metric_name = s.metric_name
    AND a.site_name = s.site_name
    AND a.trans_dt = s.trans_dt
),

-- Find the next best rank for each site that is not an outlier
upf_next_best_value AS (
  SELECT
    metric_name,
    site_name,
    trans_dt,
    MIN(rank) AS next_rank
  FROM upf_ranked_data_with_zscore
  WHERE its_outlier = 0
  GROUP BY metric_name, site_name, trans_dt
),
-- Final selection for Outlier Excluded Max
upf_final_selection AS (
  SELECT 
    '5g' AS technology,
    'curated_max' AS algorithm,
    n.trans_dt,
    event_time,
    local_event_time,
    vendor,
    fqdn AS device_name,
    'upf' AS function_name,
    n.metric_name,
    value AS metric_value,
    'count' AS metric_unit,
    group_key,
    group_value,
    fqdn_type AS device_type,
    customer_segment,
    primary_clli,
    device_clli,
    region,
    n.site_name,
    area,
    market,
    latitude,
    longitude,
    DATETIME(process_ts) AS schedule_time,
    CURRENT_TIMESTAMP() AS updated_timestamp,
    cast(null as string) as segment
  FROM upf_ranked_data_with_zscore r
  JOIN upf_next_best_value n
    ON r.metric_name = n.metric_name
    AND r.site_name = n.site_name
    AND r.trans_dt = n.trans_dt
    AND r.rank = n.next_rank
)

SELECT * FROM smf_final_selection
UNION ALL 
SELECT * FROM upf_final_selection
) src
ON tgt.trans_dt=src.trans_dt
and tgt.event_time=src.event_time
and tgt.device_name=src.device_name
and tgt.function_name=src.function_name
and tgt.algorithm=src.algorithm
and tgt.metric_name=src.metric_name
and tgt.metric_unit=src.metric_unit
and tgt.vendor=src.vendor
and coalesce(tgt.group_key,' ')=coalesce(src.group_key,' ')
and coalesce(tgt.group_value,' ')=coalesce(src.group_value,' ')
and tgt.trans_dt is not null

WHEN MATCHED
THEN UPDATE SET
tgt.technology=src.technology,
tgt.algorithm=src.algorithm,
tgt.local_event_time=src.local_event_time,
tgt.metric_value=src.metric_value,
tgt.device_type=src.device_type,
tgt.customer_segment=src.customer_segment,
tgt.segment=src.segment,
tgt.primary_clli=src.primary_clli,
tgt.device_clli=src.device_clli,
tgt.site_name=src.site_name,
tgt.region=src.region,
tgt.latitude=src.latitude,
tgt.longitude=src.longitude,
tgt.area=src.area,
tgt.market=src.market,
tgt.schedule_time=src.schedule_time,
tgt.updated_timestamp=src.updated_timestamp

WHEN NOT MATCHED THEN
INSERT
( technology,
  algorithm,
  trans_dt,
  event_time,
  local_event_time,
  device_name,
  function_name,
  vendor,
  metric_name,
  metric_value,
  metric_unit,
  group_key,
  group_value,
  device_type, 
  customer_segment,
  primary_clli,
  device_clli,
  site_name,
  region,
  latitude,
  longitude,
  area,
  market,
  schedule_time,
  updated_timestamp,
  segment
)VALUES
( src.technology,
  src.algorithm,
  src.trans_dt,
  src.event_time,
  src.local_event_time,
  src.device_name,
  src.function_name,
  src.vendor,
  src.metric_name,
  src.metric_value,
  src.metric_unit,
  src.group_key,
  src.group_value,
  src.device_type, 
  src.customer_segment,
  src.primary_clli,
  src.device_clli,
  src.site_name,
  src.region,
  src.latitude,
  src.longitude,
  src.area,
  src.market,
  src.schedule_time,
  src.updated_timestamp,
  src.segment);

--update audit table with completed status
UPDATE
  `${target_project_id}.${audit_tgt_dataset_name}.${audit_target_tblname}`
SET
  END_TIME=CURRENT_DATETIME(),
  NUM_RECORDS_AFFECTED=@@ROW_COUNT,
  STATUS="Completed",
  RETURN_MESSAGE="Success"
WHERE
  PROCESS_NAME=CONCAT("5g core vnoe utilization outliers process")
  AND start_time=safe_cast(trans_ts AS datetime);

SELECT
  "Process Completed Successfully"; 

EXCEPTION
WHEN ERROR THEN
  --update audit table with error status
UPDATE `${target_project_id}.${audit_tgt_dataset_name}.${audit_target_tblname}`
SET END_TIME=CURRENT_DATETIME(),
STATUS="Error",
RETURN_MESSAGE=CONCAT(@@error.message,'------***----',@@error.statement_text)
WHERE PROCESS_NAME=CONCAT("5g core vnoe utilization outliers process") AND start_time=safe_cast(trans_ts AS datetime); RAISE USING message=@@error.message;
END;
